spring.application.name=StaffingApplication
# OAuth2 client registration

# Keycloak Configurations
keycloak.auth-server-url=http://localhost:7080/realms/staffing
keycloak.realm=staffing
keycloak.resource=backend-app
keycloak.public-client=false
keycloak.credentials.secret=cRRRn1ULTPGRtXNsAI82vYwxIX0OC8yM

# Enable Keycloak security integration
keycloak.enable-cors=true
keycloak.bearer-only=true
keycloak.ssl-required=external
keycloak.use-resource-role-mappings=true

# Spring Boot Security Config
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:7080/realms/staffing/protocol/openid-connect/certs

# Database settings
spring.datasource.url=jdbc:mysql://localhost:3306/staffing_app
spring.datasource.username=root
spring.datasource.password=rootpassword
spring.datasource.driver-ClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#logging.level.org.hibernate.SQL=DEBUG
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Kafka Bootstrap server
spring.kafka.bootstrap-servers=localhost:9092

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer
spring.kafka.consumer.group-id=staffing-group
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Optional: enable auto topic creation
spring.kafka.admin.auto-create=true
